type Status = variant { Online; Offline };
type TournamentAccount = record {
  idx : nat8;
  id_hash : text;
  status : TournamentStatus;
  creator : text;
  game : text;
  user : vec text;
  winers : vec text;
  total_prize : nat;
  tournament_rules : text;
  starting_date : text;
  tournament_type : TournamentType;
  entry_prize : nat8;
};
type TournamentStatus = variant {
  AcceptingPlayers;
  GameInProgress;
  GameCompleted;
};
type TournamentType = variant { Prepaid; Crowdfunded };
type UserProfile = record {
  age : nat8;
  id_hash : text;
  status : Status;
  username : text;
  date : text;
  wins : nat8;
  is_mod : bool;
  tournaments_created : nat8;
};
service : {
  create_profile : (UserProfile) -> ();
  create_tournament : (TournamentAccount) -> ();
  end_tournament : (text, vec text) -> ();
  getSelf : () -> (UserProfile) query;
  get_all_tournament : () -> (vec TournamentAccount) query;
  get_all_user : () -> (vec UserProfile) query;
  get_profile : (text) -> (UserProfile) query;
  get_tournament : (text) -> (TournamentAccount) query;
  is_mod : (text) -> (bool) query;
  join_tournament : (text, text) -> ();
  set_mod : (text, principal) -> ();
  start_tournament : (text) -> ();
}
